
//! Autogenerated weights for `robonomics_datalog`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.0.0
//! DATE: 2025-05-15, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `nano`, CPU: `11th Gen Intel(R) Core(TM) i5-1130G7 @ 1.10GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/release/wbuild/dev-runtime/dev_runtime.wasm
// --pallet
// robonomics-datalog
// --extrinsic
// 
// --output
// weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `robonomics_datalog`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> robonomics_datalog::WeightInfo for WeightInfo<T> {
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Datalog::DatalogIndex` (r:1 w:1)
	/// Proof: `Datalog::DatalogIndex` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Datalog::DatalogItem` (r:0 w:1)
	/// Proof: `Datalog::DatalogItem` (`max_values`: None, `max_size`: Some(570), added: 3045, mode: `MaxEncodedLen`)
	fn record() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `148`
		//  Estimated: `3521`
		// Minimum execution time: 22_394_000 picoseconds.
		Weight::from_parts(23_081_000, 0)
			.saturating_add(Weight::from_parts(0, 3521))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Datalog::DatalogIndex` (r:1 w:1)
	/// Proof: `Datalog::DatalogIndex` (`max_values`: None, `max_size`: Some(56), added: 2531, mode: `MaxEncodedLen`)
	/// Storage: `Datalog::DatalogItem` (r:0 w:127)
	/// Proof: `Datalog::DatalogItem` (`max_values`: None, `max_size`: Some(570), added: 3045, mode: `MaxEncodedLen`)
	fn erase() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `106`
		//  Estimated: `3521`
		// Minimum execution time: 204_510_000 picoseconds.
		Weight::from_parts(207_102_000, 0)
			.saturating_add(Weight::from_parts(0, 3521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(128))
	}
}
